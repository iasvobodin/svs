precision mediump float;
// those are the mandatory attributes that the lib sets
attribute vec3 aVertexPosition;
attribute vec2 aTextureCoord;
// pass your vertex and texture coords to the fragment shader
varying vec3 vVertexPosition;
varying vec2 vTextureCoord;
 uniform float uDisplacement;

 #define M_PI 3.1415926535897932384626433832795

 vec3 deformationCurve(vec3 position, vec2 uv, float offset) {
   position.x = position.x + (sin(uv.y * M_PI) * offset);
  position.y = position.y + (sin(uv.x * M_PI) * offset);
   return position;
 }

void main() {
  vec3 pos = aVertexPosition;
// vec3 newPosition = deformationCurve(pos, aTextureCoord, uDisplacement);
gl_Position = vec4( pos.x + (sin(aTextureCoord.y * M_PI) * uDisplacement) , pos.yz, 1.0);
// set the varyings
// use our aTextureCoord attributes as texture coords in our fragment shader
vTextureCoord = aTextureCoord;
vVertexPosition = aVertexPosition;
}