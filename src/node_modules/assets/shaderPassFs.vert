precision mediump float;
// those are the mandatory attributes that the lib sets
attribute vec3 aVertexPosition;
attribute vec2 aTextureCoord;
varying vec2  vDisplacementCoord;
// pass your vertex and texture coords to the fragment shader
varying vec3 vVertexPosition;
varying vec2 vTextureCoord;
uniform float uDisplacement;
uniform mat4 uRenderTextureMatrix;

#define M_PI 3.1415926535897932384626433832795
 vec3 deformationCurve(vec3 position, vec2 uv, float offset) {
   position.x = position.x + (sin(uv.y * M_PI) * offset / 8.);
  // position.y = position.y + (sin(uv.x * M_PI) * offset);
   return position;
 }
//        vec3 newPosition = deformationCurve(aVertexPosition, aTextureCoord, uDisplacement);
// gl_Position = vec4(newPosition, 1.0);

void main() {
    gl_Position = vec4(aVertexPosition, 1.0);
vTextureCoord = aTextureCoord;
vDisplacementCoord = (uRenderTextureMatrix * vec4(aTextureCoord, 0.0, 1.0)).xy;
vVertexPosition = aVertexPosition;
}


